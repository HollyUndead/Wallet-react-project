{"version":3,"file":"static/js/877.eab01dc6.chunk.js","mappings":"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","sources":["components/Logo/Logo.styled.js","components/Logo/Logo.jsx","components/RegistrationForm/RegistrationForm.styled.js","components/RegistrationForm/RegistrationForm.jsx","components/RegistrationForm/Validation.js","pages/RegistrationPage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  flex-wrap: nowrap;\n  align-items: center;\n  gap: 15px;\n  @media screen and (min-width: 768px) {\n    gap: 20px;\n  }\n`;\n\nexport const Icon = styled.svg`\n  width: 30px;\n  height: 30px;\n  @media screen and (min-width: 768px) {\n    width: 40px;\n    height: 40px;\n  }\n`;\n\nexport const Text = styled.p`\n  font-family: 'Poppins', sans-serif;\n  font-weight: 700;\n  font-size: 22px;\n  line-height: 1.5;\n  color: black;\n  @media screen and (min-width: 768px) {\n    font-size: 30px;\n  }\n`;\n","import Icons from 'images/icons.svg';\nimport { Container, Icon, Text } from './Logo.styled';\n\nexport const Logo = () => {\n  return (\n    <Container>\n      <Icon>\n        <use href={`${Icons}#icon-logo`}></use>\n      </Icon>\n      <Text>Wallet</Text>\n    </Container>\n  );\n};\n","import { Field, Form, ErrorMessage as FormikError } from 'formik';\nimport styled from 'styled-components';\n\nexport const Container = styled.div`\n  @media screen and (min-width: 768px) {\n    height: 100%;\n    padding: 44px;\n  }\n`;\nexport const FormLayout = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  /* justify-content: center; */\n  width: 100%;\n  height: 100%;\n  padding: 34px 0px;\n  background-color: white;\n\n  @media screen and (min-width: 768px) {\n    max-width: 533px;\n    height: 516px;\n    /* padding: 52px 60px; */\n    border-radius: 20px;\n    padding-top: 10px;\n    padding-right: 20px;\n    padding-bottom: 10px;\n    padding-left: 20px;\n    align-items: center;\n    justify-content: center;\n  }\n  @media screen and (min-width: 1280px) {\n    /* width: 533px;\n    height: 616px; */\n  }\n`;\n\nexport const ErrorMessage = styled(FormikError)`\n  color: red;\n  font-size: 12px;\n  margin: 4px 0;\n`;\n\nexport const LogoContainer = styled.div`\n  margin-bottom: 50px;\n  @media screen and (min-width: 768px) {\n    margin-bottom: 30px;\n  }\n`;\n\nexport const InputIcon = styled.svg`\n  position: absolute;\n  left: 10px;\n  top: 19px;\n  transform: translateY(-50%);\n  fill: #e0e0e0;\n  transition: color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  :hover,\n  :focus {\n    fill: #4a56e2;\n  }\n`;\n\nexport const RegForm = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  @media screen and (min-width: 768px) {\n    padding-right: 15px;\n  }\n`;\n\nexport const RegistrationLabel = styled.label`\n  position: relative;\n  width: 280px;\n  margin-bottom: 10px;\n  transition: color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  :hover,\n  :focus {\n    color: #4a56e2;\n  }\n\n  :hover > svg,\n  :focus > svg {\n    fill: #4a56e2;\n  }\n  @media screen and (min-width: 768px) {\n    width: 410px;\n  }\n\n  /* @media screen and (min-width: 1280px) {\n    width: 410px;\n  } */\n`;\n\nexport const RegistrationInput = styled(Field)`\n  /* width: 90%; */\n  outline: none;\n  padding: 8px 1px 8px 54px;\n  font-family: 'Circe', sans-serif;\n  font-size: 18px;\n  line-height: 1.5;\n\n  color: #4a56e2;\n  border: none;\n  border-bottom: 1px solid #e0e0e0;\n  transition: border-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  &::placeholder {\n    font-family: 'Circe', sans-serif;\n    font-size: 16px;\n    color: #bdbdbd;\n  }\n  &:hover,\n  &:focus {\n    border-color: #4a56e2;\n  }\n  @media screen and (min-width: 768px) {\n    width: 90%;\n    &::placeholder {\n      font-size: 18px;\n    }\n  }\n`;\n\nexport const ButtonContainer = styled.div`\n  width: 220px;\n  height: 115px;\n  margin-top: 26px;\n  padding-left: 8px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-between;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nexport const ButtonRegister = styled.button`\n  width: 280px;\n  height: 50px;\n  padding: 13px 68px 13px 68px;\n  border: none;\n  background-color: #24cca7;\n  border-radius: 20px;\n  color: white;\n  font-family: 'Circe';\n  font-style: normal;\n  font-weight: 400;\n  font-size: 18px;\n  line-height: 1.5;\n  text-align: center;\n\n  transition: color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n\n  :hover,\n  :focus {\n    background-color: #4a56e2;\n    color: white;\n    transform: scale(1.02);\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 300px;\n  }\n  @media screen and (min-width: 1280px) {\n    width: 300px;\n  }\n`;\n\nexport const ButtonLogIn = styled.button`\n  width: 280px;\n  height: 50px;\n  padding: 13px 68px 13px 68px;\n  border: none;\n  background-color: white;\n  border: 1px solid #4a56e2;\n  border-radius: 20px;\n  font-family: 'Circe';\n  font-style: normal;\n  font-weight: 400;\n  font-size: 18px;\n  line-height: 1.5;\n\n  text-align: center;\n\n  color: #4a56e2;\n  transition: color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n\n  :hover,\n  :focus {\n    background-color: #4a56e2;\n    color: white;\n    transform: scale(1.02);\n  }\n  @media screen and (min-width: 768px) {\n    width: 300px;\n  }\n  @media screen and (min-width: 1280px) {\n    width: 300px;\n  }\n`;\n\nexport const IndicatorBox = styled.div`\n  width: ${props => (props.show ? '269px' : '0')};\n  @media screen and (min-width: 768px) {\n    width: ${props => (props.show ? ' 424px' : '0')};\n  }\n  transform: translateY(-1px);\n  border-radius: 10px;\n  height: 3px;\n  overflow: hidden;\n  background-color: ${props => props.color};\n\n  transition: all 400ms ease-in-out;\n`;\n\nexport const Indicator = styled.div`\n  height: 100%;\n  border-radius: 10px;\n  width: ${props => props.width}%;\n\n  background: linear-gradient(\n    90deg,\n    rgba(36, 204, 167, 1) 75%,\n    rgba(255, 27, 0, 1) 100%\n  );\n  transition: all 1000ms ease-in-out;\n`;\n\nexport const EyeBox = styled.div`\n  position: absolute;\n  right: 10px;\n  top: 23px;\n  transform: translateY(-50%);\n  fill: #e0e0e0;\n  transition: color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  :hover,\n  :focus {\n    color: #4a56e2;\n  }\n`;\n\nexport const ConfirmBox = styled.div`\n  width: ${props => (props.show ? '269px' : '0')};\n  @media screen and (min-width: 768px) {\n    width: ${props => (props.show ? ' 424px' : '0')};\n  }\n  transform: translateY(-1px);\n  border-radius: 10px;\n  height: 3px;\n  overflow: hidden;\n  background-color: rgba(255, 27, 0, 1);\n\n  transition: all 400ms ease-in-out;\n`;\n\nexport const ConfirmIndicator = styled.div`\n height: 100%;\n  border-radius: 10px;\n  width: ${props => props.width}%;\n\n  background-color: rgba(36, 204, 167, 1);\n  transition: all 500ms ease-in-out; */\n`;\n","import { Logo } from 'components/Logo/Logo';\n\nimport { Formik } from 'formik';\nimport * as yup from 'yup';\n\nimport {\n  Container,\n  FormLayout,\n  RegForm,\n  ButtonRegister,\n  RegistrationInput,\n  RegistrationLabel,\n  ButtonContainer,\n  ButtonLogIn,\n  LogoContainer,\n  InputIcon,\n  ErrorMessage,\n  IndicatorBox,\n  Indicator,\n  ConfirmBox,\n  ConfirmIndicator,\n  EyeBox,\n} from './RegistrationForm.styled';\nimport Icons from 'images/icons.svg';\nimport { BsEye, BsEyeSlash } from 'react-icons/bs';\nimport { useDispatch } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { signUp } from 'redux/operations';\nimport { useRef, useState } from 'react';\nimport { toast } from 'react-toastify';\nimport { handleValidation } from './Validation';\n\nconst validationSchema = yup.object().shape({\n  email: yup\n    .string()\n    .email('Пошта має бути робочою, як конячка!')\n    .required('На цю пошту летітимуть голуби з листівками вдачі ;)'),\n  password: yup\n    .string()\n    .matches(\n      /^[a-zA-Z0-9_-]+$/,\n      'Ну, ви ж доросла людина, такого не можна писати'\n    )\n    .min(6, 'Гей! це якось замало, давай хоча б 6 символів введемо')\n    .matches(/[A-Z]+/, 'Додай велику літеру, щоб у нас була довіра')\n    .max(12, 'Ого, це ж тобі не Кобзарик, зупинись на 12 символах')\n    .matches(/\\d+/, 'Хоча б одну цифру')\n    .required(\"Ну, пароль це обов'язково, інакше ми не спрацюємось\"),\n  passwordConfirmation: yup\n    .string()\n    .oneOf(\n      [yup.ref('password'), null],\n      'Шо, забув що там нафантазував у паролі?'\n    )\n    .required('Шо, забув що там нафантазував у паролі?'),\n  username: yup\n    .string()\n    .matches(\n      /^[a-zA-Z0-9_-]+$/,\n      'Ну, ви ж доросла людина, такого не можна писати'\n    )\n    .min(1, 'Ну, хоч якось тебе кличуть, чи завжди сам приходиш')\n    .max(20, 'Ну, прям УВЕСЬ родовід писати не треба')\n    .required(\"Мені цікаво дізнатися твоє ім'я\"),\n});\n\nexport const RegistrationForm = () => {\n  const dispatch = useDispatch();\n  const ref = useRef('');\n  const [valid, setValid] = useState({\n    password: false,\n    passwordConfirmation: false,\n  });\n  const [passwordType, setPasswordType] = useState('password');\n  const [confirmPass, setConfirmPass] = useState('0');\n  const [width, setWidth] = useState('3');\n  const [bgc, setBgc] = useState('#ff1b00');\n\n  const handleConfirmPasswordBar = e => {\n    const matchPass = e.target.value;\n    const mainPass = ref.current.values.password;\n\n    if (mainPass === matchPass) {\n      setConfirmPass('100');\n      return;\n    }\n\n    setConfirmPass('0');\n    return;\n  };\n\n  const togglePassword = () => {\n    if (passwordType === 'password') {\n      setPasswordType('text');\n      return;\n    }\n    setPasswordType('password');\n  };\n\n  const handleSubmit = ({ username, email, password }, props) => {\n    const trimmedUser = username.trim();\n    const trimmedEmail = email.trim();\n    const trimmedPassword = password.trim();\n    const user = {\n      username: trimmedUser,\n      email: trimmedEmail,\n      password: trimmedPassword,\n    };\n    dispatch(signUp(user))\n      .unwrap()\n      .catch(error => {\n        if (error.code === 'ERR_NETWORK') {\n          return toast.error(\n            'Oops, something wrong with network, try again later'\n          );\n        }\n        if (error.code === 'ERR_BAD_REQUEST') {\n          return toast.error('User with such email already exists');\n        }\n      });\n\n    props.resetForm();\n  };\n\n  return (\n    <Container>\n      <section>\n        <FormLayout>\n          <LogoContainer>\n            <Logo />\n          </LogoContainer>\n          <Formik\n            innerRef={ref}\n            validationSchema={validationSchema}\n            initialValues={{\n              email: '',\n              password: '',\n              passwordConfirmation: '',\n              username: '',\n            }}\n            onSubmit={handleSubmit}\n          >\n            {({ isSubmitting }) => {\n              return (\n                <RegForm autoComplete=\"off\" noValidate>\n                  <RegistrationLabel>\n                    <RegistrationInput\n                      autoComplete=\"off\"\n                      type=\"email\"\n                      name=\"email\"\n                      placeholder=\"E-mail:  example@mail.com\"\n                    />\n                    <ErrorMessage name=\"email\" component=\"span\" />\n\n                    <InputIcon width=\"21\" height=\"16\">\n                      <use href={`${Icons}#icon-email`} />\n                    </InputIcon>\n                  </RegistrationLabel>\n                  <RegistrationLabel>\n                    <RegistrationInput\n                      autoComplete=\"off\"\n                      type={passwordType}\n                      name=\"password\"\n                      placeholder=\"Password\"\n                      onInput={e => {\n                        handleValidation(e, setBgc, setWidth);\n                      }}\n                      onFocus={() =>\n                        setValid(prevState => ({\n                          ...prevState,\n                          password: true,\n                        }))\n                      }\n                    />\n\n                    <IndicatorBox color={bgc} show={valid.password}>\n                      <Indicator width={width} />\n                    </IndicatorBox>\n\n                    <ErrorMessage name=\"password\" component=\"span\" />\n                    <EyeBox onClick={togglePassword}>\n                      {passwordType === 'password' ? (\n                        <BsEyeSlash fill=\"#e0e0e0\" />\n                      ) : (\n                        <BsEye fill=\"#e0e0e0\" />\n                      )}\n                    </EyeBox>\n\n                    <InputIcon width=\"16\" height=\"21\">\n                      <use href={`${Icons}#icon-lock`} />\n                    </InputIcon>\n                  </RegistrationLabel>\n\n                  <RegistrationLabel>\n                    <RegistrationInput\n                      autoComplete=\"off\"\n                      type={passwordType}\n                      name=\"passwordConfirmation\"\n                      placeholder=\"Confirm password\"\n                      onInput={e => handleConfirmPasswordBar(e)}\n                      onFocus={() =>\n                        setValid(prevState => ({\n                          ...prevState,\n                          passwordConfirmation: true,\n                        }))\n                      }\n                    />\n                    <ConfirmBox show={valid.passwordConfirmation}>\n                      <ConfirmIndicator width={confirmPass} />\n                    </ConfirmBox>\n\n                    <ErrorMessage\n                      name=\"passwordConfirmation\"\n                      component=\"span\"\n                    />\n\n                    <EyeBox onClick={togglePassword}>\n                      {passwordType === 'password' ? (\n                        <BsEyeSlash fill=\"#e0e0e0\" />\n                      ) : (\n                        <BsEye fill=\"#e0e0e0\" />\n                      )}\n                    </EyeBox>\n\n                    <InputIcon width=\"16\" height=\"21\">\n                      <use href={`${Icons}#icon-lock`} />\n                    </InputIcon>\n                  </RegistrationLabel>\n\n                  <RegistrationLabel>\n                    <RegistrationInput\n                      type=\"text\"\n                      name=\"username\"\n                      placeholder=\"First name:  Adrian\"\n                    />\n                    <ErrorMessage name=\"username\" component=\"span\" />\n                    <InputIcon width=\"18\" height=\"18\">\n                      <use href={`${Icons}#icon-account_box`} />\n                    </InputIcon>\n                  </RegistrationLabel>\n\n                  <ButtonContainer>\n                    <ButtonRegister type=\"submit\" disabled={isSubmitting}>\n                      {'Register'.toUpperCase()}\n                    </ButtonRegister>\n                    <Link to=\"/login\">\n                      <ButtonLogIn type=\"ButtonLogIn\">\n                        {'Log in'.toUpperCase()}\n                      </ButtonLogIn>\n                    </Link>\n                  </ButtonContainer>\n                </RegForm>\n              );\n            }}\n          </Formik>\n        </FormLayout>\n      </section>\n    </Container>\n  );\n};\n","export function handleValidation(e, setBgc, setWidth) {\n  const password = e.target.value;\n  let strength = 0;\n\n  const validations = [\n    password.length > 5,\n    password.length < 13,\n    password.search(/\\d+/) > -1,\n    password.search(/[a-z]+/) > -1,\n    password.search(/[A-Z]+/) > -1,\n  ];\n  strength = validations.reduce((acc, cur) => acc + cur);\n\n  if (password.search(/^[a-zA-Z0-9_-]+$/) !== 0) {\n    strength = strength - 1;\n  }\n  if (password === '') {\n    strength = 0;\n  }\n\n  switch (strength) {\n    case 0:\n      setWidth('10');\n      setBgc('#ff1b00');\n      break;\n    case 1:\n      setWidth('20');\n      setBgc('#ff1b00');\n      break;\n    case 2:\n      setWidth('40');\n      setBgc('#ff1b00');\n      break;\n    case 3:\n      setWidth('75');\n      setBgc('#ff1b00');\n      break;\n    case 4:\n      setWidth('100');\n      setBgc('#ff1b00');\n      break;\n\n    case 5:\n      setWidth('125');\n      setBgc('transparent');\n      break;\n    default:\n      return;\n  }\n}\n","import { RegistrationForm } from 'components/RegistrationForm/RegistrationForm';\nimport { useMediaQuery } from 'react-responsive';\nimport styled from 'styled-components';\nimport bgImageDesk from '../images/bg-reg-desk.png';\nimport bgImageTab from '../images/bg-reg-tab.png';\nimport regDesk1x from '../images/reg-desk-1x.png';\nimport regDesk2x from '../images/reg-desk-2x.png';\nimport regTab1x from '../images/reg-tablet-1x.png';\nimport regTab2x from '../images/reg-tablet-2x.png';\n\nconst RegistrationPage = () => {\n  const isTabDesk = useMediaQuery({ query: '(min-width: 768px)' });\n\n  return (\n    <Container>\n      {isTabDesk && (\n        <Picture>\n          <picture>\n            <source\n              srcSet={`${regDesk1x} 1x, ${regDesk2x} 2x`}\n              width=\"435\"\n              media=\"(min-width:1280px)\"\n            />\n            <source\n              srcSet={`${regTab1x} 1x, ${regTab2x} 2x`}\n              width=\"260\"\n              media=\"(min-width: 768px)\"\n            />\n            <img src={regDesk1x} width=\"435\" alt=\"start page\" />\n          </picture>\n          <Title>Finance App</Title>\n        </Picture>\n      )}\n\n      <RegistrationForm />\n    </Container>\n  );\n};\n\nconst Container = styled.div`\n  min-height: 100vh;\n  /* overflow: scroll; */\n  @media screen and (min-width: 768px) and (max-width: 1279px) {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    /* gap: 10px; */\n    gap: 50px;\n    padding: 60px 117px 48px;\n    background: url(${bgImageTab});\n    background-size: cover;\n    background-repeat: no-repeat;\n    background-position: center;\n    background-color: #e7eaf2;\n  }\n  @media screen and (min-width: 1280px) {\n    display: flex;\n    height: 100%;\n    align-items: center;\n    justify-content: center;\n    gap: 154px;\n    /* padding-bottom: 0px;\n    margin-bottom: 0; */\n    background: url(${bgImageDesk});\n    background-size: cover;\n    background-repeat: no-repeat;\n    background-position: center;\n    background-color: #ede7f2;\n  }\n`;\n\nconst Picture = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  @media screen and (min-width: 768px) {\n    flex-wrap: wrap;\n    gap: 50px;\n  }\n  @media screen and (min-width: 1280px) {\n    width: 410px;\n    gap: 32px;\n    flex-direction: column;\n  }\n`;\n\nconst Title = styled.h1`\n  @media screen and (min-width: 768px) {\n    font-family: 'Poppins', sans-serif;\n    font-style: normal;\n    font-weight: 400;\n    font-size: 30px;\n    line-height: 1.5;\n    color: #000000;\n  }\n`;\n\nexport default RegistrationPage;\n"],"names":["Container","styled","Icon","Text","Logo","href","Icons","FormLayout","ErrorMessage","FormikError","LogoContainer","InputIcon","RegForm","Form","RegistrationLabel","RegistrationInput","Field","ButtonContainer","ButtonRegister","ButtonLogIn","IndicatorBox","props","show","color","Indicator","width","EyeBox","ConfirmBox","ConfirmIndicator","validationSchema","yup","shape","email","required","password","matches","min","max","passwordConfirmation","oneOf","username","RegistrationForm","dispatch","useDispatch","ref","useRef","useState","valid","setValid","passwordType","setPasswordType","confirmPass","setConfirmPass","setWidth","bgc","setBgc","togglePassword","innerRef","initialValues","onSubmit","user","trim","signUp","unwrap","catch","error","code","toast","resetForm","isSubmitting","autoComplete","noValidate","type","name","placeholder","component","height","onInput","e","target","value","strength","length","search","reduce","acc","cur","handleValidation","onFocus","prevState","onClick","fill","matchPass","current","values","handleConfirmPasswordBar","disabled","toUpperCase","to","bgImageTab","bgImageDesk","Picture","Title","isTabDesk","useMediaQuery","query","srcSet","regDesk1x","regDesk2x","media","regTab1x","regTab2x","src","alt"],"sourceRoot":""}
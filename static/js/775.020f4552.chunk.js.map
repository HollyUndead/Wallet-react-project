{"version":3,"file":"static/js/775.020f4552.chunk.js","mappings":"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","sources":["components/Logo/Logo.styled.js","components/Logo/Logo.jsx","components/LoginForm/LoginForm.styled.js","components/LoginForm/LoginForm.jsx","pages/LoginPage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  flex-wrap: nowrap;\n  align-items: center;\n  gap: 15px;\n  @media screen and (min-width: 768px) {\n    gap: 20px;\n  }\n`;\n\nexport const Icon = styled.svg`\n  width: 30px;\n  height: 30px;\n  @media screen and (min-width: 768px) {\n    width: 40px;\n    height: 40px;\n  }\n`;\n\nexport const Text = styled.p`\n  font-family: 'Poppins', sans-serif;\n  font-weight: 700;\n  font-size: 22px;\n  line-height: 1.5;\n  color: black;\n  @media screen and (min-width: 768px) {\n    font-size: 30px;\n  }\n`;\n","import Icons from 'images/icons.svg';\nimport { Container, Icon, Text } from './Logo.styled';\n\nexport const Logo = () => {\n  return (\n    <Container>\n      <Icon>\n        <use href={`${Icons}#icon-logo`}></use>\n      </Icon>\n      <Text>Wallet</Text>\n    </Container>\n  );\n};\n","import { Form as LoginForm, Field, ErrorMessage as FormikError } from 'formik';\nimport styled from 'styled-components';\n\nexport const Container = styled.div`\n  @media screen and (min-width: 768px) {\n    height: 100%;\n    padding: 50px;\n  }\n`;\n\nexport const FormLayout = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  /* justify-content: center; */\n  width: 100%;\n  height: 100%;\n  /* height: 480px; */\n  padding: 54px 0px;\n  background-color: white;\n\n  @media screen and (min-width: 768px) {\n    max-width: 533px;\n    height: 468px;\n    /* padding: 40px 60px 65px; */\n    border-radius: 20px;\n    padding-top: 10px;\n    padding-right: 20px;\n    padding-bottom: 10px;\n    padding-left: 20px;\n    align-items: center;\n    justify-content: center;\n  }\n  @media screen and (min-width: 1280px) {\n    /* padding: 40px 59px 62px 65px; */\n  }\n`;\n\nexport const ErrorMessage = styled(FormikError)`\n  color: red;\n  font-size: 12px;\n  margin: 4px 0;\n`;\n\nexport const LogoContainer = styled.div`\n  margin-bottom: 60px;\n  @media screen and (min-width: 768px) {\n    margin-bottom: 50px;\n  }\n`;\n\nexport const Form = styled(LoginForm)`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  @media screen and (min-width: 768px) {\n    padding-right: 15px;\n  }\n`;\n\nexport const LogInLabel = styled.label`\n  position: relative;\n  width: 280px;\n  margin-bottom: 10px;\n  transition: color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  :hover,\n  :focus {\n    color: #4a56e2;\n  }\n  :hover > svg,\n  :focus > svg {\n    fill: #4a56e2;\n  }\n  @media screen and (min-width: 768px) {\n    width: 410px;\n  }\n  @media screen and (min-width: 1280px) {\n    /* width: 410px; */\n  }\n`;\n\nexport const InputIcon = styled.svg`\n  position: absolute;\n  left: 10px;\n  top: 19px;\n  transform: translateY(-50%);\n  fill: #e0e0e0;\n  transition: color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  :hover,\n  :focus {\n    fill: #4a56e2;\n  }\n`;\n\nexport const LogInInput = styled(Field)`\n  /* width: 90%; */\n  outline: none;\n  padding: 8px 1px 8px 54px;\n  font-size: 18px;\n  line-height: 1.5;\n  color: #4a56e2;\n  border: none;\n  border-bottom: 1px solid #e0e0e0;\n  transition: border-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  &::placeholder {\n    font-size: 16px;\n    color: #bdbdbd;\n  }\n  &:hover,\n  &:focus {\n    border-color: #4a56e2;\n  }\n  @media screen and (min-width: 768px) {\n    width: 90%;\n    &::placeholder {\n      font-size: 18px;\n    }\n  }\n`;\n\nexport const ButtonContainer = styled.div`\n  width: 220px;\n  height: 120px;\n  margin-top: 40px;\n  padding-left: 8px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-between;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nexport const ButtonLogIn = styled.button`\n  width: 280px;\n  height: 50px;\n  padding: 13px 67px 13px 67px;\n  border: none;\n  background-color: #24cca7;\n  border-radius: 20px;\n  color: white;\n  font-family: 'Circe';\n  font-style: normal;\n  font-weight: 400;\n  font-size: 18px;\n  line-height: 1.5;\n  text-align: center;\n\n  transition: color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  :hover,\n  :focus {\n    background-color: #4a56e2;\n    color: white;\n    transform: scale(1.02);\n  }\n  @media screen and (min-width: 768px) {\n    width: 300px;\n  }\n  @media screen and (min-width: 1280px) {\n    width: 300px;\n  }\n`;\n\nexport const ButtonRegister = styled.button`\n  width: 280px;\n  height: 50px;\n  padding: 13px 65px 13px 71px;\n  border: none;\n  background-color: white;\n  border: 1px solid #4a56e2;\n  border-radius: 20px;\n\n  font-style: normal;\n  font-weight: 400;\n  font-size: 18px;\n  line-height: 1.5;\n\n  text-align: center;\n\n  color: #4a56e2;\n  transition: color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  :hover,\n  :focus {\n    background-color: #4a56e2;\n    color: white;\n    transform: scale(1.02);\n  }\n  @media screen and (min-width: 768px) {\n    width: 300px;\n  }\n  @media screen and (min-width: 1280px) {\n    width: 300px;\n  }\n`;\n\n\nexport const EyeBox = styled.div`\n  position: absolute;\n  right: 10px;\n  top: 19px;\n  transform: translateY(-50%);\n  fill: #e0e0e0;\n  transition: color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  :hover,\n  :focus {\n    fill: #4a56e2;\n  }\n`;\n","import * as Yup from 'yup';\nimport { Formik } from 'formik';\nimport {\n  Container,\n  FormLayout,\n  Form,\n  ButtonLogIn,\n  ButtonContainer,\n  ButtonRegister,\n  LogInInput,\n  LogInLabel,\n  LogoContainer,\n  InputIcon,\n  EyeBox,\n  ErrorMessage,\n} from './LoginForm.styled';\nimport { Link } from 'react-router-dom';\nimport { Logo } from 'components/Logo/Logo';\nimport Icons from '../../images/icons.svg';\nimport { toast } from 'react-toastify';\nimport { BsEye, BsEyeSlash } from 'react-icons/bs';\n\nimport { useDispatch } from 'react-redux';\nimport { signIn } from 'redux/operations';\nimport { useState } from 'react';\n\nconst validationSchema = Yup.object().shape({\n  email: Yup.string()\n    .email('Пошта має бути робочою, як конячка!')\n    .required('На цю пошту летітимуть голуби з листівками вдачі ;)'),\n  password: Yup.string()\n    .min(6, 'Гей! це якось замало, давай хоча б 6 символів введемо')\n    .max(12, 'Ого, це ж тобі не Кобзарик, зупинись на 12 символах')\n    .required(\"Ну, пароль це обов'язково, інакше ми не спрацюємось\"),\n});\n\nexport const LoginForm = () => {\n  const dispatch = useDispatch();\n  const [passwordType, setPasswordType] = useState('password');\n\n  const togglePassword = () => {\n    if (passwordType === 'password') {\n      setPasswordType('text');\n      return;\n    }\n    setPasswordType('password');\n  };\n\n  const handleSubmit = async ({ email, password }, props) => {\n    const trimmedEmail = email.trim();\n    const trimmedPassword = password.trim();\n    const user = {\n      email: trimmedEmail,\n      password: trimmedPassword,\n    };\n\n    dispatch(signIn(user))\n      .unwrap()\n      .catch(error => {\n        if (error.code === 'ERR_NETWORK') {\n          return toast.error(\n            'Oops, something wrong with network, try again later'\n          );\n        }\n        if (error.code === 'ERR_BAD_REQUEST') {\n          return toast.error('You have entered an invalid email or password');\n        }\n      });\n\n    props.resetForm();\n  };\n\n  return (\n    <Container>\n      <FormLayout>\n        <LogoContainer>\n          <Logo />\n        </LogoContainer>\n        <Formik\n          initialValues={{\n            email: '',\n            password: '',\n          }}\n          validationSchema={validationSchema}\n          onSubmit={handleSubmit}\n        >\n          {({ isSubmitting }) => (\n            <Form autoComplete=\"on\" noValidate>\n              <LogInLabel>\n                <LogInInput\n                  autoComplete=\"off\"\n                  type=\"email\"\n                  name=\"email\"\n                  placeholder=\"E-mail:  example@mail.com\"\n                />\n                <ErrorMessage name=\"email\" component=\"span\" />\n                <InputIcon width=\"21\" height=\"16\">\n                  <use href={`${Icons}#icon-email`} />\n                </InputIcon>\n              </LogInLabel>\n\n              <LogInLabel>\n                <LogInInput\n                  autoComplete=\"on\"\n                  type={passwordType}\n                  name=\"password\"\n                  placeholder=\"Password\"\n                />\n                <ErrorMessage name=\"password\" component=\"span\" />\n                <EyeBox onClick={togglePassword}>\n                  {passwordType === 'password' ? (\n                    <BsEyeSlash fill=\"#e0e0e0\" />\n                  ) : (\n                    <BsEye fill=\"#e0e0e0\" />\n                  )}\n                </EyeBox>\n                <InputIcon width=\"16\" height=\"21\">\n                  <use href={`${Icons}#icon-lock`} />\n                </InputIcon>\n              </LogInLabel>\n              <ButtonContainer>\n                <ButtonLogIn type=\"submit\" disabled={isSubmitting}>\n                  {'Log in'.toUpperCase()}\n                </ButtonLogIn>\n                <Link to=\"/register\">\n                  <ButtonRegister type=\"button\">\n                    {'Register'.toUpperCase()}\n                  </ButtonRegister>\n                </Link>\n              </ButtonContainer>\n            </Form>\n          )}\n        </Formik>\n      </FormLayout>\n    </Container>\n  );\n};\n","import { LoginForm } from 'components/LoginForm/LoginForm';\nimport { useMediaQuery } from 'react-responsive';\nimport bgImageDesk from '../images/bg-reg-desk.png';\nimport bgImageTab from '../images/bg-reg-tab.png';\n\nimport logDesk1x from '../images/login-desk-1x.png';\nimport logDesk2x from '../images/login-desk-2x.png';\nimport logTab1x from '../images/login-tablet-1x.png';\nimport logTab2x from '../images/login-tablet-2x.png';\nimport styled from 'styled-components';\n\nconst LoginPage = () => {\n  const isTabDesk = useMediaQuery({ query: '(min-width: 768px)' });\n\n  return (\n    <Container>\n      {isTabDesk && (\n        <Picture>\n          <picture>\n            <source\n              srcSet={`${logDesk1x} 1x, ${logDesk2x} 2x`}\n              width=\"435\"\n              media=\"(min-width:1280px)\"\n            />\n            <source\n              srcSet={`${logTab1x} 1x, ${logTab2x} 2x`}\n              width=\"260\"\n              media=\"(min-width: 768px)\"\n            />\n            <img src={logDesk1x} width=\"435\" alt=\"start page\" />\n          </picture>\n          <Title>Finance App</Title>\n        </Picture>\n      )}\n\n      <LoginForm />\n    </Container>\n  );\n};\n\nconst Container = styled.div`\n  min-height: 100vh;\n  /* padding-bottom: 1px; */\n  @media screen and (min-width: 768px) and (max-width: 1279px) {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    /* gap: 10px; */\n    gap: 50px;\n    padding: 60px 117px 48px;\n    background: url(${bgImageTab});\n    background-size: cover;\n    background-repeat: no-repeat;\n    background-position: center;\n    background-color: #e7eaf2;\n  }\n  @media screen and (min-width: 1280px) {\n    display: flex;\n    /* height: 100%; */\n    align-items: center;\n    justify-content: center;\n    gap: 154px;\n    /* padding: 18px; */\n    margin-bottom: 0;\n    background: url(${bgImageDesk});\n    background-size: cover;\n    background-repeat: no-repeat;\n    background-position: center;\n    background-color: #ede7f2;\n  }\n`;\n\nconst Picture = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  @media screen and (min-width: 768px) {\n    flex-wrap: wrap;\n    gap: 50px;\n  }\n  @media screen and (min-width: 1280px) {\n    width: 410px;\n    gap: 32px;\n    flex-direction: column;\n  }\n`;\n\nconst Title = styled.h1`\n  @media screen and (min-width: 768px) {\n    font-family: 'Poppins', sans-serif;\n    font-style: normal;\n    font-weight: 400;\n    font-size: 30px;\n    line-height: 1.5;\n    color: #000000;\n  }\n`;\n\nexport default LoginPage;\n"],"names":["Container","styled","Icon","Text","Logo","href","Icons","FormLayout","ErrorMessage","FormikError","LogoContainer","Form","LoginForm","LogInLabel","InputIcon","LogInInput","Field","ButtonContainer","ButtonLogIn","ButtonRegister","EyeBox","validationSchema","Yup","shape","email","required","password","min","max","dispatch","useDispatch","useState","passwordType","setPasswordType","togglePassword","handleSubmit","props","trimmedEmail","trim","trimmedPassword","user","signIn","unwrap","catch","error","code","toast","resetForm","initialValues","onSubmit","isSubmitting","autoComplete","noValidate","type","name","placeholder","component","width","height","onClick","fill","disabled","toUpperCase","to","bgImageTab","bgImageDesk","Picture","Title","isTabDesk","useMediaQuery","query","srcSet","logDesk1x","logDesk2x","media","logTab1x","logTab2x","src","alt"],"sourceRoot":""}
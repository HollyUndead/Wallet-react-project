{"version":3,"file":"static/js/273.cae4486c.chunk.js","mappings":"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","sources":["components/Chart/Chart.jsx","components/StatDropdown/DropDown.jsx","components/Table/Table.jsx","pages/SummaryPage.jsx"],"sourcesContent":["import React from 'react';\nimport {} from '../../redux/Finance/financeSelectors';\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from 'chart.js';\nimport { Doughnut } from 'react-chartjs-2';\nimport styled from 'styled-components';\n\nChartJS.register(ArcElement, Tooltip, Legend);\n\nconst Chart = ({ data, diference, show, colors }) => {\n  const dataNull = {\n    labels: [],\n    datasets: [\n      {\n        label: '# of Votes',\n        data: data,\n        backgroundColor: colors,\n        hoverOffset: 0,\n        borderColor: colors,\n        borderWidth: 0,\n      },\n    ],\n  };\n  return (\n    <WrapperChart>\n      {show ? (\n        <DoughnutContainer>\n          <>\n            <Doughnut\n              data={data}\n              options={{\n                maintainAspectRatio: false,\n                cutoutPercentage: 90,\n                plugins: {\n                  legend: { display: false },\n                },\n              }}\n            />\n            <Balance>\n              <Symbol>&#8372;</Symbol>\n              {\n                <Span diference={diference}>\n                  {String(diference).replace('-', '')}\n                </Span>\n              }\n            </Balance>\n          </>\n        </DoughnutContainer>\n      ) : (\n        <DoughnutContainer>\n          <>\n            <Doughnut\n              data={dataNull}\n              options={{\n                cutoutPercentage: 90,\n                plugins: {\n                  legend: { display: false },\n                  tooltip: {\n                    callbacks: {\n                      label: function (context) {\n                        let label = context.dataset.label;\n                        let color = context.parsed;\n                        return `${label}: â‚´\\n${color}`;\n                      },\n                    },\n                  },\n                },\n              }}\n            />\n            <Balance>\n              <Symbol>&#8372;</Symbol>\n              <Span diference={diference}>\n                {String(diference).replace('-', '')}\n              </Span>\n            </Balance>\n          </>\n        </DoughnutContainer>\n      )}\n    </WrapperChart>\n  );\n};\n\nconst WrapperChart = styled.div`\n  position: relative;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst DoughnutContainer = styled.div`\n  width: 288px;\n  height: 288px;\n`;\nconst Symbol = styled.span`\n  font-weight: 400;\n  font-style: normal;\n`;\nconst Balance = styled.div`\n  position: absolute;\n  z-index: 2;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  font-weight: 700;\n  font-size: 18px;\n  line-height: 1.5;\n  display: flex;\n  align-items: center;\n  color: black;\n`;\n\nconst Span = styled.span`\n  color: ${props => {\n    return props.diference > 0 ? '#24CCA7' : '#FF6596';\n  }};\n`;\n\nexport default Chart;\n","import { useEffect, useState, useRef } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { fetchTransactionSummary } from 'redux/operations';\nimport { SlArrowDown, SlArrowUp } from 'react-icons/sl';\nimport styled from 'styled-components';\n\nlet listOfYears = [];\nconst listOfMonth = [\n  'January',\n  'February',\n  'March',\n  'April',\n  'May',\n  'June',\n  'July',\n  'August',\n  'September',\n  'October',\n  'November',\n  'December',\n];\nlet curYear = new Date().getFullYear();\nfor (let i = 2017; i <= curYear; i += 1) {\n  listOfYears.push(i);\n}\n\nexport const DropDown = () => {\n  const date = new Date();\n  const [selectedMonth, setSelectedMonth] = useState(date.getMonth());\n  const [selectedYear, setSelectedYear] = useState(date.getFullYear());\n  const [isMonthDropdownOpen, setIsMonthDropdownOpen] = useState(false);\n  const [isYearDropdownOpen, setIsYearDropdownOpen] = useState(false);\n  const dispatch = useDispatch();\n  const monthDropdownRef = useRef(null);\n  const yearDropdownRef = useRef(null);\n\n  useEffect(() => {\n    dispatch(\n      fetchTransactionSummary({ year: selectedYear, month: selectedMonth + 1 })\n    );\n    // eslint-disable-next-line\n  }, [selectedMonth, selectedYear]);\n\n  useEffect(() => {\n    const handleClickOutside = event => {\n      if (\n        monthDropdownRef.current &&\n        !monthDropdownRef.current.contains(event.target) &&\n        isMonthDropdownOpen\n      ) {\n        setIsMonthDropdownOpen(false);\n      }\n\n      if (\n        yearDropdownRef.current &&\n        !yearDropdownRef.current.contains(event.target) &&\n        isYearDropdownOpen\n      ) {\n        setIsYearDropdownOpen(false);\n      }\n    };\n    document.addEventListener('mousedown', handleClickOutside);\n\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n    // eslint-disable-next-line\n  });\n\n  const toggleMonthDropdown = () => {\n    setIsMonthDropdownOpen(!isMonthDropdownOpen);\n  };\n\n  const toggleYearDropdown = () => {\n    setIsYearDropdownOpen(!isYearDropdownOpen);\n  };\n\n  return (\n    <DropDownWrap>\n      <DropDownButton ref={monthDropdownRef} onClick={toggleMonthDropdown}>\n        {listOfMonth[selectedMonth]}\n        {isMonthDropdownOpen ? <SlArrowUp /> : <SlArrowDown />}\n        {isMonthDropdownOpen ? (\n          <DropDownList>\n            {listOfMonth.map((month, index) => (\n              <DropDownItem\n                key={index}\n                onClick={() => {\n                  setSelectedMonth(index);\n                  setIsMonthDropdownOpen(false);\n                }}\n              >\n                {month}\n              </DropDownItem>\n            ))}\n          </DropDownList>\n        ) : null}\n      </DropDownButton>\n\n      <DropDownButton ref={yearDropdownRef} onClick={toggleYearDropdown}>\n        {selectedYear}\n        {isYearDropdownOpen ? <SlArrowUp /> : <SlArrowDown />}\n        {isYearDropdownOpen ? (\n          <DropDownList>\n            {listOfYears.map((year, index) => (\n              <DropDownItem\n                key={index}\n                onClick={() => {\n                  setSelectedYear(year);\n                  setIsYearDropdownOpen(false);\n                }}\n              >\n                {year}\n              </DropDownItem>\n            ))}\n          </DropDownList>\n        ) : null}\n      </DropDownButton>\n    </DropDownWrap>\n  );\n};\n\nconst DropDownWrap = styled.div`\n  display: flex;\n  gap: 32px;\n  justify-content: center;\n  align-items: center;\n  @media screen and (max-width: 767px) {\n    margin-top: 32px;\n  }\n`;\nconst DropDownButton = styled.button`\n  position: relative;\n  display: flex;\n  justify-content: space-around;\n  align-items: center;\n  border-radius: 30px;\n  background-color: transparent;\n  width: 182px;\n  height: 50px;\n  border: 1px solid #000000;\n  font-family: 'Circe';\n  font-style: normal;\n  font-weight: 400;\n  font-size: 16px;\n  line-height: 24px;\n  color: #000000;\n`;\nconst DropDownList = styled.div`\n  padding-top: 5px;\n  padding-bottom: 5px;\n  position: absolute;\n  width: 100%;\n  top: 50px;\n  left: -1px;\n  display: flex;\n  flex-direction: column;\n  background: rgba(255, 255, 255, 0.5);\n  box-shadow: 0px 6px 15px rgba(0, 0, 0, 0.1);\n  backdrop-filter: blur(25px);\n\n  border-radius: 20px;\n  gap: 6px;\n  max-width: 300px;\n\n  max-height: 165px;\n  overflow-y: auto;\n  ::-webkit-scrollbar {\n    display: none;\n  }\n`;\n\nconst DropDownItem = styled.span`\n  font-family: 'Circe';\n  font-style: normal;\n  font-weight: 400;\n  font-size: 16px;\n  line-height: 24px;\n\n  color: #000000;\n\n  flex: none;\n  order: 0;\n  flex-grow: 0;\n  height: 28px;\n  &:hover {\n    background: #ffffff;\n    border-radius: 30px;\n  }\n`;\n","/* eslint-disable */\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport { selectTransactionSummary } from 'redux/Finance/financeSelectors';\nimport styled from 'styled-components';\n\nconst Table = ({ colors }) => {\n  const CategorySummary = useSelector(selectTransactionSummary);\n  return (\n    <div>\n      <div>\n        <TableContainer>\n          <TableSpan>Category</TableSpan>\n          <TableSpan>Amount</TableSpan>\n        </TableContainer>\n        <div>\n          <UlList>\n            {CategorySummary.categoriesSummary !== undefined ? (\n              CategorySummary.categoriesSummary.map((el, index) => {\n                if (el.type !== 'INCOME') {\n                  const color = colors[index];\n                  return (\n                    <LiItem key={index}>\n                      <ColorWrpaDiv>\n                        <ColorDiv\n                          color={color}\n                          lastItem={\n                            index ===\n                            CategorySummary.categoriesSummary.length - 1\n                              ? true\n                              : false\n                          }\n                        ></ColorDiv>\n                        <CatName>{el.name}</CatName>\n                      </ColorWrpaDiv>\n                      <CatTotal>{String(el.total).replace('-', '')}</CatTotal>\n                    </LiItem>\n                  );\n                }\n              })\n            ) : (\n              <></>\n            )}\n          </UlList>\n        </div>\n      </div>\n      <UlList>\n        <LiTotal>\n          <SpanTotal>Expenses:</SpanTotal>\n          <SpanTotalExpense sum={CategorySummary.expenseSummary}>\n            {String(CategorySummary.expenseSummary).replace('-', '')}\n          </SpanTotalExpense>\n        </LiTotal>\n        <LiTotal>\n          <SpanTotal>Incomes:</SpanTotal>\n          <SpanTotalIncome sum={CategorySummary.incomeSummary}>\n            {CategorySummary.incomeSummary}\n          </SpanTotalIncome>\n        </LiTotal>\n      </UlList>\n    </div>\n  );\n};\n\nconst LiTotal = styled.li`\n  display: flex;\n  justify-content: space-between;\n  margin-top: 16px;\n`;\n\nconst SpanTotalExpense = styled.span`\n  font-family: 'Circe';\n  font-style: normal;\n  font-weight: 700;\n  font-size: 16px;\n  line-height: 24px;\n  color: #ff6596;\n`;\n\nconst SpanTotalIncome = styled.span`\n  font-family: 'Circe';\n  font-style: normal;\n  font-weight: 700;\n  font-size: 16px;\n  line-height: 24px;\n  color: #24cca7;\n`;\n\nconst SpanTotal = styled.span`\n  font-family: 'Circe';\n  font-style: normal;\n  font-weight: 700;\n  font-size: 16px;\n  line-height: 24px;\n`;\n\nconst CatTotal = styled.span`\n  font-family: 'Circe';\n  font-style: normal;\n  font-weight: 400;\n  font-size: 16px;\n  line-height: 24px;\n`;\n\nconst CatName = styled.span`\n  font-family: 'Circe';\n  font-style: normal;\n  font-weight: 400;\n  font-size: 16px;\n  line-height: 24px;\n`;\n\nconst ColorWrpaDiv = styled.div`\n  display: flex;\n  gap: 16px;\n`;\n\nconst ColorDiv = styled.div`\n  padding: 0;\n  margin: 0;\n  background-color: ${props => {\n    return props.color;\n  }};\n  width: 24px;\n  height: 24px;\n  border-radius: 6px;\n`;\nconst TableContainer = styled.div`\n  margin-top: 20px;\n  display: flex;\n  height: 58px;\n  align-items: center;\n  justify-content: space-between;\n  padding-left: 30px;\n  padding-right: 30px;\n  background: #ffffff;\n  border-radius: 30px;\n  font-family: 'Circe';\n  font-style: normal;\n  font-weight: 400;\n  font-size: 16px;\n  line-height: 24px;\n  /* identical to box height */\n\n  color: #000000;\n`;\nconst TableSpan = styled.span`\n  font-family: 'Circe';\n  font-style: normal;\n  font-weight: 700;\n  font-size: 18px;\n  line-height: 27px;\n  /* identical to box height */\n\n  color: #000000;\n`;\n\nconst LiItem = styled.li`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  height: 54px;\n  border-bottom: 1px solid #dcdcdf;\n`;\n\nconst UlList = styled.ul`\n  padding-left: 35px;\n  padding-right: 35px;\n`;\n\nexport default Table;\n","/* eslint-disable */\nimport Chart from 'components/Chart/Chart';\nimport { DropDown } from 'components/StatDropdown/DropDown';\nimport { Loader } from '../components/Loader/Loader.jsx';\nimport Table from 'components/Table/Table';\nimport { useSelector } from 'react-redux';\nimport {\n  selectTransactionSummary,\n  selectFinanceIsLoading,\n} from 'redux/Finance/financeSelectors';\nimport styled from 'styled-components';\n\nconst SummaryPage = () => {\n  const transactionSummary = useSelector(selectTransactionSummary);\n  const isLoading = useSelector(selectFinanceIsLoading);\n  const getData = () => {\n    let data, diference;\n    if (transactionSummary.categoriesSummary !== undefined) {\n      if (transactionSummary.categoriesSummary.length === 0) {\n        data = [1];\n        diference = 0;\n        return { data, diference };\n      }\n      diference =\n        transactionSummary.expenseSummary + transactionSummary.incomeSummary;\n      data = transactionSummary.categoriesSummary.map(el => {\n        if (el.type !== 'INCOME') {\n          return Number(String(el.total).replace('-', ''));\n        }\n      });\n    }\n    return { data, diference };\n  };\n  const colors = [\n    '#FED057',\n    '#FFD8D0',\n    '#FD9498',\n    '#C5BAFF',\n    '#6E78E8',\n    '#4A56E2',\n    '#81E1FF',\n    '#24CCA7',\n    '#00AD84',\n    '#ff2d65',\n  ];\n\n  return (\n    <SummaryWraper>\n      <div>\n        <SummaryTitle>Statistics</SummaryTitle>\n        {!isLoading ? (\n          <Chart\n            diference={getData().diference}\n            data={getData().data}\n            colors={colors}\n          />\n        ) : (\n          <Loader />\n        )}\n      </div>\n      <TableWrap>\n        <DropDownOnPage />\n        <Table colors={colors} />\n      </TableWrap>\n    </SummaryWraper>\n  );\n};\n\nconst SummaryWraper = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding-top: 43px;\n  display: flex;\n  flex-diraction: column;\n  padding-bottom: 20px;\n  @media screen and (min-width: 768px) {\n    padding-top: 20px;\n    flex-direction: row;\n  }\n  @media screen and (min-width: 1200px) {\n    padding-top: 32px;\n  }\n`;\n\nconst SummaryTitle = styled.h1`\n  font-family: 'Poppins';\n  font-style: normal;\n  font-weight: 400;\n  font-size: 30px;\n  line-height: 1.5;\n\n  display: flex;\n  align-items: center;\n  text-align: center;\n\n  color: #000000;\n  padding-bottom: 8px;\n  @media screen and (min-width: 768px) {\n    padding-bottom: 20px;\n  }\n`;\n\nconst DropDownOnPage = styled(DropDown)``;\n\nconst TableWrap = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n`;\n\nexport default SummaryPage;\n"],"names":["ChartJS","ArcElement","Tooltip","Legend","WrapperChart","styled","DoughnutContainer","Symbol","Balance","Span","props","diference","data","show","colors","dataNull","labels","datasets","label","backgroundColor","hoverOffset","borderColor","borderWidth","options","maintainAspectRatio","cutoutPercentage","plugins","legend","display","String","replace","tooltip","callbacks","context","dataset","color","parsed","listOfYears","listOfMonth","curYear","Date","getFullYear","i","push","DropDownWrap","DropDownButton","DropDownList","DropDownItem","LiTotal","SpanTotalExpense","SpanTotalIncome","SpanTotal","CatTotal","CatName","ColorWrpaDiv","ColorDiv","TableContainer","TableSpan","LiItem","UlList","CategorySummary","useSelector","selectTransactionSummary","undefined","categoriesSummary","map","el","index","type","lastItem","length","name","total","sum","expenseSummary","incomeSummary","SummaryWraper","SummaryTitle","DropDownOnPage","date","useState","getMonth","selectedMonth","setSelectedMonth","selectedYear","setSelectedYear","isMonthDropdownOpen","setIsMonthDropdownOpen","isYearDropdownOpen","setIsYearDropdownOpen","dispatch","useDispatch","monthDropdownRef","useRef","yearDropdownRef","useEffect","fetchTransactionSummary","year","month","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","ref","onClick","TableWrap","transactionSummary","isLoading","selectFinanceIsLoading","getData","Number","Loader"],"sourceRoot":""}
{"version":3,"file":"static/js/80.dd511125.chunk.js","mappings":"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","sources":["components/Chart/Chart.jsx","components/StatDropdown/DropDown.jsx","components/Table/Table.jsx","pages/SummaryPage.jsx"],"sourcesContent":["import React from 'react';\nimport {} from '../../redux/Finance/financeSelectors';\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from 'chart.js';\nimport { Doughnut } from 'react-chartjs-2';\nimport styled from 'styled-components';\n\nChartJS.register(ArcElement, Tooltip, Legend);\n\nconst Chart = ({ data, diference, show, colors }) => {\n  const dataNull = {\n    labels: [],\n    datasets: [\n      {\n        label: '# of Votes',\n        data: data,\n        backgroundColor: colors,\n        hoverOffset: 0,\n        borderColor: colors,\n        borderWidth: 0,\n      },\n    ],\n  };\n  return (\n    <WrapperChart>\n      {show ? (\n        <DoughnutContainer>\n          <>\n            <Doughnut\n              data={data}\n              options={{\n                maintainAspectRatio: false,\n                cutoutPercentage: 90,\n                plugins: {\n                  legend: { display: false },\n                },\n              }}\n            />\n            <Balance>\n              <Symbol>&#8372;</Symbol>\n              {\n                <Span diference={diference}>\n                  {String(diference).replace('-', '')}\n                </Span>\n              }\n            </Balance>\n          </>\n        </DoughnutContainer>\n      ) : (\n        <DoughnutContainer>\n          <>\n            <Doughnut\n              data={dataNull}\n              options={{\n                cutoutPercentage: 90,\n                plugins: {\n                  legend: { display: false },\n                  tooltip: {\n                    enabled: false,\n                  },\n                },\n              }}\n            />\n            <Balance>\n              <Symbol>&#8372;</Symbol>\n              <Span diference={diference}>\n                {String(diference).replace('-', '')}\n              </Span>\n            </Balance>\n          </>\n        </DoughnutContainer>\n      )}\n    </WrapperChart>\n  );\n};\n\nconst WrapperChart = styled.div`\n  margin-right: 20px;\n`;\n\nconst DoughnutContainer = styled.div`\n  position: relative;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\nconst Symbol = styled.span`\n  font-weight: 400;\n  font-style: normal;\n`;\nconst Balance = styled.div`\n  position: absolute;\n  z-index: 2;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  font-weight: 700;\n  font-size: 18px;\n  line-height: 1.5;\n  display: flex;\n  align-items: center;\n  color: black;\n`;\n\nconst Span = styled.span`\n  color: ${props => {\n    return props.diference > 0 ? '#24CCA7' : '#FF6596';\n  }};\n`;\n\nexport default Chart;\n","/* eslint-disable */\nimport { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { fetchTransactionSummary } from 'redux/operations';\nimport styled from 'styled-components';\nimport './DropDown.css';\n\nlet listOfYears = [];\nconst listOfMonth = [\n  'January',\n  'February',\n  'March',\n  'April',\n  'May',\n  'June',\n  'July',\n  'August',\n  'September',\n  'October',\n  'November',\n  'December',\n];\nlet curYear = new Date().getFullYear();\nfor (let i = 2000; i <= curYear; i += 1) {\n  listOfYears.push(i);\n}\n\nexport const DropDown = () => {\n  const date = new Date();\n  const [selectedMonth, setSelectedMonth] = useState(date.getMonth());\n  const [selectedYear, setSelectedYear] = useState(date.getFullYear());\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(\n      fetchTransactionSummary({ year: selectedYear, month: selectedMonth + 1 })\n    );\n  }, [selectedMonth, selectedYear]);\n\n  return (\n    <DropDownWrap>\n      <DropDownSelect\n        className=\"custom-select\"\n        name=\"month\"\n        defaultValue={selectedMonth}\n        onChange={e => {\n          setSelectedMonth(Number(e.target.value));\n          fetch();\n        }}\n      >\n        {listOfMonth.map((month, index) => {\n          return (\n            <Option key={index} value={index}>\n              {month}\n            </Option>\n          );\n        })}\n      </DropDownSelect>\n\n      <DropDownSelect\n        className=\"custom-select\"\n        name=\"year\"\n        defaultValue={selectedYear}\n        onChange={e => {\n          setSelectedYear(Number(e.target.value));\n        }}\n      >\n        {listOfYears.map((year, index) => {\n          return (\n            <option key={index} value={year}>\n              {year}\n            </option>\n          );\n        })}\n      </DropDownSelect>\n    </DropDownWrap>\n  );\n};\n\nconst Option = styled.option`\n  border: 10px solid red;\n`;\n\nconst DropDownWrap = styled.div`\n  display: flex;\n  gap: 15px;\n  justify-content: center;\n  align-items: center;\n  @media screen and (max-width: 767px) {\n    margin-top: 32px;\n  }\n`;\n\nconst DropDownSelect = styled.select`\n  width: 150px;\n  height: 60px;\n  border-radius: 30px;\n  background-color: transparent;\n`;\n","/* eslint-disable */\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport { selectTransactionSummary } from 'redux/Finance/financeSelectors';\nimport styled from 'styled-components';\n\nconst Table = ({ colors }) => {\n  const CategorySummary = useSelector(selectTransactionSummary);\n  return (\n    <div>\n      <div>\n        <TableContainer>\n          <TableSpan>Category</TableSpan>\n          <TableSpan>Amount</TableSpan>\n        </TableContainer>\n        <div>\n          <UlList>\n            {CategorySummary.categoriesSummary !== undefined ? (\n              CategorySummary.categoriesSummary.map((el, index) => {\n                if (el.type !== 'INCOME') {\n                  const color = colors[index];\n                  console.log(color);\n                  return (\n                    <LiItem>\n                      <ColorWrpaDiv>\n                        <ColorDiv\n                          color={color}\n                          lastItem={\n                            index ===\n                            CategorySummary.categoriesSummary.length - 1\n                              ? true\n                              : false\n                          }\n                        ></ColorDiv>\n                        <CatName>{el.name}</CatName>\n                      </ColorWrpaDiv>\n                      <CatTotal>{String(el.total).replace('-', '')}</CatTotal>\n                    </LiItem>\n                  );\n                }\n              })\n            ) : (\n              <></>\n            )}\n          </UlList>\n        </div>\n      </div>\n      <UlList>\n        <LiTotal>\n          <SpanTotal>Expenses:</SpanTotal>\n          <SpanTotalExpense sum={CategorySummary.expenseSummary}>\n            {String(CategorySummary.expenseSummary).replace('-', '')}\n          </SpanTotalExpense>\n        </LiTotal>\n        <LiTotal>\n          <SpanTotal>Incomes:</SpanTotal>\n          <SpanTotalIncome sum={CategorySummary.incomeSummary}>\n            {CategorySummary.incomeSummary}\n          </SpanTotalIncome>\n        </LiTotal>\n      </UlList>\n    </div>\n  );\n};\n\nconst LiTotal = styled.li`\n  display: flex;\n  justify-content: space-between;\n  margin-top: 16px;\n`;\n\nconst SpanTotalExpense = styled.span`\n  font-family: 'Circe';\n  font-style: normal;\n  font-weight: 700;\n  font-size: 16px;\n  line-height: 24px;\n  color: #ff6596;\n`;\n\nconst SpanTotalIncome = styled.span`\n  font-family: 'Circe';\n  font-style: normal;\n  font-weight: 700;\n  font-size: 16px;\n  line-height: 24px;\n  color: #24cca7;\n`;\n\nconst SpanTotal = styled.span`\n  font-family: 'Circe';\n  font-style: normal;\n  font-weight: 700;\n  font-size: 16px;\n  line-height: 24px;\n`;\n\nconst CatTotal = styled.span`\n  font-family: 'Circe';\n  font-style: normal;\n  font-weight: 400;\n  font-size: 16px;\n  line-height: 24px;\n`;\n\nconst CatName = styled.span`\n  font-family: 'Circe';\n  font-style: normal;\n  font-weight: 400;\n  font-size: 16px;\n  line-height: 24px;\n`;\n\nconst ColorWrpaDiv = styled.div`\n  display: flex;\n  gap: 16px;\n`;\n\nconst ColorDiv = styled.div`\n  padding: 0;\n  margin: 0;\n  background-color: ${props => {\n    return props.color;\n  }};\n  width: 24px;\n  height: 24px;\n  border-radius: 6px;\n`;\nconst TableContainer = styled.div`\n  margin-top: 20px;\n  display: flex;\n  height: 58px;\n  align-items: center;\n  justify-content: space-between;\n  padding-left: 30px;\n  padding-right: 30px;\n  background: #ffffff;\n  border-radius: 30px;\n  font-family: 'Circe';\n  font-style: normal;\n  font-weight: 400;\n  font-size: 16px;\n  line-height: 24px;\n  /* identical to box height */\n\n  color: #000000;\n`;\nconst TableSpan = styled.span`\n  font-family: 'Circe';\n  font-style: normal;\n  font-weight: 700;\n  font-size: 18px;\n  line-height: 27px;\n  /* identical to box height */\n\n  color: #000000;\n`;\n\nconst LiItem = styled.li`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  height: 54px;\n  border-bottom: 1px solid #dcdcdf;\n`;\n\nconst UlList = styled.ul`\n  padding-left: 35px;\n  padding-right: 35px;\n`;\n\nexport default Table;\n","/* eslint-disable */\nimport Chart from 'components/Chart/Chart';\nimport { DropDown } from 'components/StatDropdown/DropDown';\nimport Table from 'components/Table/Table';\nimport { useSelector } from 'react-redux';\nimport { selectTransactionSummary } from 'redux/Finance/financeSelectors';\nimport styled from 'styled-components';\n\nconst SummaryPage = () => {\n  const transactionSummary = useSelector(selectTransactionSummary);\n  const getData = () => {\n    let data, diference;\n    if (transactionSummary.categoriesSummary !== undefined) {\n      if (transactionSummary.categoriesSummary.length === 0) {\n        data = [1];\n        diference = 0;\n        return { data, diference };\n      }\n      diference =\n        transactionSummary.expenseSummary + transactionSummary.incomeSummary;\n      data = transactionSummary.categoriesSummary.map(el => {\n        if (el.type !== 'INCOME') {\n          return Number(String(el.total).replace('-', ''));\n        }\n      });\n    }\n    return { data, diference };\n  };\n  const colors = [\n    '#FED057',\n    '#FFD8D0',\n    '#FD9498',\n    '#C5BAFF',\n    '#6E78E8',\n    '#4A56E2',\n    '#81E1FF',\n    '#24CCA7',\n    '#00AD84',\n  ];\n  return (\n    <SummaryWraper>\n      <div>\n        <SummaryTitle>Statistics</SummaryTitle>\n        <Chart\n          diference={getData().diference}\n          data={getData().data}\n          colors={colors}\n        />\n      </div>\n      <TableWrap>\n        <DropDownOnPage />\n        <Table colors={colors} />\n      </TableWrap>\n    </SummaryWraper>\n  );\n};\n\nconst SummaryWraper = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding-top: 43px;\n  display: flex;\n  flex-diraction: column;\n  @media screen and (min-width: 768px) {\n    padding-top: 20px;\n    flex-direction: row;\n  }\n  @media screen and (min-width: 1200px) {\n    padding-top: 32px;\n  }\n`;\n\nconst SummaryTitle = styled.h1`\n  font-family: 'Poppins';\n  font-style: normal;\n  font-weight: 400;\n  font-size: 30px;\n  line-height: 1.5;\n\n  display: flex;\n  align-items: center;\n  text-align: center;\n\n  color: #000000;\n  padding-bottom: 8px;\n  @media screen and (min-width: 768px) {\n    padding-bottom: 20px;\n  }\n`;\n\nconst DropDownOnPage = styled(DropDown)``;\n\nconst TableWrap = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n`;\n\nexport default SummaryPage;\n"],"names":["ChartJS","ArcElement","Tooltip","Legend","WrapperChart","styled","DoughnutContainer","Symbol","Balance","Span","props","diference","data","show","colors","dataNull","labels","datasets","label","backgroundColor","hoverOffset","borderColor","borderWidth","options","maintainAspectRatio","cutoutPercentage","plugins","legend","display","String","replace","tooltip","enabled","listOfYears","listOfMonth","curYear","Date","getFullYear","i","push","Option","DropDownWrap","DropDownSelect","LiTotal","SpanTotalExpense","SpanTotalIncome","SpanTotal","CatTotal","CatName","ColorWrpaDiv","ColorDiv","color","TableContainer","TableSpan","LiItem","UlList","CategorySummary","useSelector","selectTransactionSummary","undefined","categoriesSummary","map","el","index","type","console","log","lastItem","length","name","total","sum","expenseSummary","incomeSummary","SummaryWraper","SummaryTitle","DropDownOnPage","date","useState","getMonth","selectedMonth","setSelectedMonth","selectedYear","setSelectedYear","dispatch","useDispatch","useEffect","fetchTransactionSummary","year","month","className","defaultValue","onChange","e","Number","target","value","fetch","TableWrap","transactionSummary","getData"],"sourceRoot":""}
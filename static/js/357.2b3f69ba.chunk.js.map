{"version":3,"file":"static/js/357.2b3f69ba.chunk.js","mappings":"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","sources":["components/TransactionListItem/TransactionListItemMobile.jsx","components/Transaction-buttons/TransactionDeleteButton.jsx","components/Transaction-buttons/TransactionEditButton.jsx","components/TransactionListItem/TransactionListItemPc.jsx","pages/DashboardPage.jsx"],"sourcesContent":["export const TransactionListItemMobile = ({ transaction, categories }) => {\n  const { transactionDate, type, categoryId, comment, amount } = transaction;\n\n  const typeStr = type === 'INCOME' ? '+' : '-';\n  const categoryName =\n    categories.length &&\n    categories.find(category => category.id === categoryId).name;\n\n  return (\n    <div>\n      <ul className=\"aasas\">\n        <li>\n          <span>Date</span>\n          <span>{transactionDate}</span>\n        </li>\n        <li>\n          <span>Type</span>\n          <span>{typeStr}</span>\n        </li>\n        <li>\n          <span>Category</span>\n          <span>{categoryName}</span>\n        </li>\n        <li>\n          <span> Comment</span>\n          <span>{comment}</span>\n        </li>\n        <li>\n          <span>Sum</span>\n          <span>{amount}</span>\n        </li>\n      </ul>\n    </div>\n  );\n};\n","import { useDispatch } from 'react-redux';\nimport { deleteTransaction } from 'redux/operations';\nimport { deleteTransactionOffline } from 'redux/Finance/financeSlice';\n\nexport const TransactionDeleteButton = ({ id }) => {\n  const dispatch = useDispatch();\n\n  const handleDelete = () => {\n    dispatch(deleteTransaction(id));\n    dispatch(deleteTransactionOffline(id));\n  };\n  return <button onClick={handleDelete}>Delete</button>;\n};\n","import { useMediaQuery } from 'react-responsive';\nimport { FaPen } from 'react-icons/fa';\n\nexport const TransactionEditButton = () => {\n  const isMobile = useMediaQuery({\n    query: '(max-width: 320px)',\n  });\n  const handleTransactionEdit = () => {\n    console.log('edit');\n  };\n  return (\n    <span onClick={handleTransactionEdit} style={{ cursor: 'pointer' }}>\n      <FaPen />\n      {isMobile && 'Edit'}\n    </span>\n  );\n};\n","import { TransactionDeleteButton } from 'components/Transaction-buttons/TransactionDeleteButton';\nimport { TransactionEditButton } from 'components/Transaction-buttons/TransactionEditButton';\nimport styled from 'styled-components';\n\nexport const TransactionListItemPc = ({ transaction, categories }) => {\n  const { transactionDate, type, categoryId, comment, amount } = transaction;\n\n  const typeStr = type === 'INCOME' ? '+' : '-';\n  const categoryName =\n    categories.length &&\n    categories.find(category => category.id === categoryId).name;\n\n  return (\n    <tr>\n      <ListItemTd>{transactionDate}</ListItemTd>\n      <TypeEl>{typeStr}</TypeEl>\n      <ListItemTd>{categoryName}</ListItemTd>\n      <ListItemTd>{comment}</ListItemTd>\n      <ListItemTd>{amount}</ListItemTd>\n      <ListItemTd>\n        <TransactionEditButton />\n        <TransactionDeleteButton id={transaction.id} />\n      </ListItemTd>\n    </tr>\n  );\n};\n\nconst ListItemTd = styled.td``;\n\nconst TypeEl = styled.td`\n  padding-left: 18px;\n`;\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useMediaQuery } from 'react-responsive';\nimport { TransactionListItemMobile } from 'components/TransactionListItem/TransactionListItemMobile';\nimport { TransactionListItemPc } from 'components/TransactionListItem/TransactionListItemPc';\nimport {\n  selectTransactions,\n  selectTransactionCategories,\n} from 'redux/Finance/financeSelectors';\nimport { AiFillPlusCircle } from 'react-icons/ai';\nimport {\n  fetchTransactions,\n  fetchTransactionCategories,\n} from 'redux/operations';\nimport { Balance } from 'components/Balance/Balance';\nimport styled from 'styled-components';\n\nconst DashboardPage = () => {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchTransactions());\n    dispatch(fetchTransactionCategories());\n    // eslint-disable-next-line\n  }, []);\n  const transactions = useSelector(selectTransactions);\n  const categories = useSelector(selectTransactionCategories);\n  const isMobile = useMediaQuery({\n    query: '(max-width: 767px)',\n  });\n\n  return (\n    <DashboardContainer>\n      {isMobile && <Balance />}\n      {!isMobile && (\n        <TransactionListTablePc>\n          <thead>\n            <Th>Date</Th>\n            <Th>Type</Th>\n            <Th>Category</Th>\n            <Th>Comments</Th>\n            <Th>Sum</Th>\n            <Th>Buttons</Th>\n          </thead>\n          <tbody>\n            {transactions.map(transaction => {\n              return (\n                <TransactionListItemPc\n                  transaction={transaction}\n                  key={transaction.id}\n                  categories={categories}\n                />\n              );\n            })}\n          </tbody>\n        </TransactionListTablePc>\n      )}\n      {isMobile && (\n        <ul>\n          {transactions.map(transaction => {\n            return (\n              <TransactionListItemMobile\n                transaction={transaction}\n                key={transaction.id}\n                categories={categories}\n              />\n            );\n          })}\n        </ul>\n      )}\n      <AddIconWrap>\n        <AiFillPlusCircle\n          style={{\n            width: '44px',\n            height: '44px',\n            fill: '#24CCA7',\n          }}\n        />\n      </AddIconWrap>\n    </DashboardContainer>\n  );\n};\n\nconst DashboardContainer = styled.div`\n  width: '100%';\n  padding-top: 15px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  @media screen and (min-width: 768px) {\n    padding-top: 20px;\n  }\n  @media screen and (min-width: 1200px) {\n    padding-top: 46px;\n  }\n`;\n\nconst AddIconWrap = styled.div`\n  position: absolute;\n  right: 40px;\n  bottom: 40px;\n`;\n\nconst TransactionListTablePc = styled.table`\n  width: 100%;\n`;\n\nconst Th = styled.th`\n  text-align: left;\n`;\n\nexport default DashboardPage;\n"],"names":["TransactionListItemMobile","transaction","categories","transactionDate","type","categoryId","comment","amount","typeStr","categoryName","length","find","category","id","name","className","TransactionDeleteButton","dispatch","useDispatch","onClick","deleteTransaction","deleteTransactionOffline","TransactionEditButton","isMobile","useMediaQuery","query","console","log","style","cursor","TransactionListItemPc","ListItemTd","TypeEl","styled","DashboardContainer","AddIconWrap","TransactionListTablePc","Th","useEffect","fetchTransactions","fetchTransactionCategories","transactions","useSelector","selectTransactions","selectTransactionCategories","Balance","map","width","height","fill"],"sourceRoot":""}